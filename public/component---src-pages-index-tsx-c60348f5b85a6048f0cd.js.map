{"version":3,"file":"component---src-pages-index-tsx-c60348f5b85a6048f0cd.js","mappings":"0LAEe,SAASA,EAAMC,GAAyC,IAAxC,SAAEC,GAAmCD,EACnE,OACCE,EAAAA,cAAAA,EAAAA,SAAA,KAECA,EAAAA,cAAA,QAAMC,UAAU,yDACdF,GAKL,C,oECLe,SAASG,EAAUC,GACjC,OACCH,EAAAA,cAAA,OAAKC,UAAU,iBACdD,EAAAA,cAAA,SACCI,KAAK,OACLH,UAAU,oJACVI,YAAaF,EAAME,aAAe,kBAClCC,QAAUC,IACTA,EAAEC,kBACEL,EAAMG,SAASH,EAAMG,QAAQC,EAAEE,cAAcC,MAAM,IAK5D,C,oECnBe,SAASC,EAAKb,GAA6C,IAA5C,SAAEC,KAAaI,GAA0BL,EACtE,OACCE,EAAAA,cAAA,OAAKC,UAAU,8BACdD,EAAAA,cAAA,OAAAY,OAAAC,OAAA,CACCZ,UAAU,qEACNE,GAEHJ,GAIL,C,uBCYO,SAASe,EAAaC,EAAkBC,GAC9C,MAAMC,EAAQ,GAGd,IAAK,MAAMC,KAAQH,EAAQI,MAAO,CACjC,MAAMC,EAAoBJ,EAAYG,MAAME,MAC1CC,GAASA,EAAKC,YAAYC,IAAMN,EAAKM,KAElCJ,GACLH,EAAMQ,KAAK,IACPP,EACHQ,KAAMN,EAAkBM,MAE1B,CAEA,OAAOT,CACR,C,kKClCe,SAASU,EAAW7B,GAA8B,IAA7B,KAAE8B,GAAwB9B,EAC7D,MAAM+B,EAAUD,EAAKF,KAAKI,MAAM,KAAK,GAC/BC,EAAMH,EAAKF,KAEjB,OACC1B,EAAAA,cAACgC,EAAAA,GAAI,CAACC,GAAIF,EAAK9B,UAAU,oBACxBD,EAAAA,cAAA,OAAKC,UAAU,sBACdD,EAAAA,cAAA,QAAMC,UAAU,kDACd2B,EAAKM,MAEPlC,EAAAA,cAAA,QAAMC,UAAU,WAAW4B,IAI/B,CChBA,IAAIM,EAA0B,GA2Bf,SAASC,EAAStC,GAA6C,IAA5C,YAAEuC,GAAuCvC,EACtEwC,EA1BL,WACC,GAAIH,EAAcI,OAAQ,OAAOJ,EAEjC,MAiBMK,GAAWC,EAAAA,EAAAA,IAjBN,cAmBX,OADAN,GAAgBrB,EAAAA,EAAAA,GAAa0B,EAASzB,QAASyB,EAASxB,aACjDmB,CACR,CAGgBO,GAGf,OAFAJ,EAAWA,EAASK,MAAK,CAACC,EAAGC,IAAMD,EAAEV,KAAKY,cAAcD,EAAEX,QAGzDlC,EAAAA,cAAA,OAAKC,UAAU,oDACbqC,EAASS,KAAKnB,IACd,IACCS,GACCT,EAAKM,KAAKc,cAAcC,SAASZ,EAAYW,eAG/C,OAAOhD,EAAAA,cAAC2B,EAAW,CAACC,KAAMA,EAAMsB,IAAKtB,EAAKJ,IAAM,IAIpD,CC1BA,MAhBA,WACC,MAAM,EAAC2B,EAAe,EAAEC,IAAmBC,EAAAA,EAAAA,UAAS,IAEpD,OACCrD,EAAAA,cAACH,EAAAA,EAAM,KACNG,EAAAA,cAAA,OAAKC,UAAU,yBACdD,EAAAA,cAACW,EAAAA,EAAK,KAAC,WAERX,EAAAA,cAAA,OAAKC,UAAU,wBACdD,EAAAA,cAACE,EAAAA,EAAS,CAACI,QAAS8C,IACpBpD,EAAAA,cAACoC,EAAS,CAACC,YAAac,KAI5B,C","sources":["webpack://gatsby-starter-hello-world/./src/components/Layout.tsx","webpack://gatsby-starter-hello-world/./src/components/SearchBar.tsx","webpack://gatsby-starter-hello-world/./src/components/Title.tsx","webpack://gatsby-starter-hello-world/./src/modules/listFiles.ts","webpack://gatsby-starter-hello-world/./src/components/FileListing.tsx","webpack://gatsby-starter-hello-world/./src/components/ListFiles.tsx","webpack://gatsby-starter-hello-world/./src/pages/index.tsx"],"sourcesContent":["import React from \"react\";\n\nexport default function Layout({ children }: React.PropsWithChildren) {\n\treturn (\n\t\t<>\n\t\t\t{/* NAVBAR */}\n\t\t\t<main className=\"px-14 pt-10 w-screen h-screen font-body flex flex-row\">\n\t\t\t\t{children}\n\t\t\t</main>\n\t\t\t{/* FOOTER */}\n\t\t</>\n\t);\n}\n","import React from \"react\";\n\ninterface Props {\n\tonInput?: (input: string) => void;\n\tplaceholder?: string;\n}\n\nexport default function SearchBar(props: Props): React.ReactNode {\n\treturn (\n\t\t<div className=\"flex h-[58px]\">\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tclassName=\"w-full border-2 rounded-md border-purple focus:outline-none px-4 text-2xl text-purple placeholder:purple placeholder:italic placeholder:lowercase\"\n\t\t\t\tplaceholder={props.placeholder || \"Search for File\"}\n\t\t\t\tonInput={(e) => {\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\tif (props.onInput) props.onInput(e.currentTarget.value);\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n","import React, { PropsWithChildren } from \"react\";\n\nexport default function Title({ children, ...props }: PropsWithChildren) {\n\treturn (\n\t\t<div className=\"flex h-[58px] items-center\">\n\t\t\t<span\n\t\t\t\tclassName=\"text-4xl h-fit font-semibold lowercase tracking-tight text-purple\"\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</span>\n\t\t</div>\n\t);\n}\n","import type { FileSystemNode } from \"gatsby-source-filesystem\";\n\ninterface QueryNodesResult<T> {\n\tnodes: T[];\n}\n\ntype AllFile = QueryNodesResult<FileSystemNode>;\n\nexport interface SitePageNode {\n\tpath: string;\n\tpageContext: Partial<{\n\t\tid: string;\n\t}>;\n}\n\ntype AllSitePage = QueryNodesResult<SitePageNode>;\n\nexport interface QueryResults {\n\tallFile: AllFile;\n\tallSitePage: AllSitePage;\n}\n\nexport type ExtendedFSNode = FileSystemNode & { path: string };\nexport type FileList = ExtendedFSNode[];\n\nexport function processFiles(allFile: AllFile, allSitePage: AllSitePage) {\n\tconst files = [] as FileList;\n\n\t// JANK!\n\tfor (const node of allFile.nodes) {\n\t\tconst correspondingPage = allSitePage.nodes.find(\n\t\t\t(page) => page.pageContext.id == node.id,\n\t\t);\n\t\tif (!correspondingPage) continue;\n\t\tfiles.push({\n\t\t\t...node,\n\t\t\tpath: correspondingPage.path,\n\t\t});\n\t}\n\n\treturn files;\n}\n","import React from \"react\";\nimport { ExtendedFSNode } from \"../modules/listFiles\";\nimport { Link } from \"gatsby\";\n\ninterface FileListingProps extends React.PropsWithChildren {\n\tfile: ExtendedFSNode;\n}\nexport default function FileListing({ file }: FileListingProps) {\n\tconst subject = file.path.split(\"/\")[2];\n\tconst url = file.path;\n\n\treturn (\n\t\t<Link to={url} className=\"border-b-2 group\">\n\t\t\t<div className=\"flex flex-row my-1\">\n\t\t\t\t<span className=\"group-hover:translate-x-2 transition-transform\">\n\t\t\t\t\t{file.name}\n\t\t\t\t</span>\n\t\t\t\t<span className=\"ml-auto\">{subject}</span>\n\t\t\t</div>\n\t\t</Link>\n\t);\n}\n","import React from \"react\";\nimport { graphql, useStaticQuery, Link } from \"gatsby\";\nimport { QueryResults, FileList, processFiles } from \"../modules/listFiles\";\nimport FileListing from \"./FileListing\";\n\nlet fileListCache: FileList = [];\n\nfunction getListOfFiles() {\n\tif (fileListCache.length) return fileListCache;\n\n\tconst query = graphql`\n\t\t{\n\t\t\tallSitePage {\n\t\t\t\tnodes {\n\t\t\t\t\tpath\n\t\t\t\t\tpageContext\n\t\t\t\t}\n\t\t\t}\n\t\t\tallFile(filter: { ext: { eq: \".md\" } }) {\n\t\t\t\tnodes {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`;\n\n\tconst queryRes = useStaticQuery(query) as QueryResults;\n\tfileListCache = processFiles(queryRes.allFile, queryRes.allSitePage);\n\treturn fileListCache;\n}\n\nexport default function ListFiles({ searchInput }: { searchInput?: string }) {\n\tlet fileList = getListOfFiles();\n\tfileList = fileList.sort((a, b) => a.name.localeCompare(b.name));\n\n\treturn (\n\t\t<div className=\"flex flex-1 flex-col pt-3 px-3 overflow-y-scroll\">\n\t\t\t{fileList.map((file) => {\n\t\t\t\tif (\n\t\t\t\t\tsearchInput &&\n\t\t\t\t\t!file.name.toLowerCase().includes(searchInput.toLowerCase())\n\t\t\t\t)\n\t\t\t\t\treturn;\n\t\t\t\treturn <FileListing file={file} key={file.id} />;\n\t\t\t})}\n\t\t</div>\n\t);\n}\n","import React, { useState } from \"react\";\nimport Layout from \"../components/Layout\";\nimport Title from \"../components/Title\";\nimport SearchBar from \"../components/SearchBar\";\nimport ListFiles from \"../components/ListFiles\";\n\nfunction App(): React.ReactNode {\n\tconst [get_searchInput, set_searchInput] = useState(\"\");\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className=\"flex flex-[0_0_200px]\">\n\t\t\t\t<Title>StudyC</Title>\n\t\t\t</div>\n\t\t\t<div className=\"flex flex-1 flex-col\">\n\t\t\t\t<SearchBar onInput={set_searchInput} />\n\t\t\t\t<ListFiles searchInput={get_searchInput} />\n\t\t\t</div>\n\t\t</Layout>\n\t);\n}\n\nexport default App;\n"],"names":["Layout","_ref","children","React","className","SearchBar","props","type","placeholder","onInput","e","stopPropagation","currentTarget","value","Title","Object","assign","processFiles","allFile","allSitePage","files","node","nodes","correspondingPage","find","page","pageContext","id","push","path","FileListing","file","subject","split","url","Link","to","name","fileListCache","ListFiles","searchInput","fileList","length","queryRes","useStaticQuery","getListOfFiles","sort","a","b","localeCompare","map","toLowerCase","includes","key","get_searchInput","set_searchInput","useState"],"sourceRoot":""}